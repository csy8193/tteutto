<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="edu.kh.tteutto" />
	
	<!-- google Class Bean설정 추가 -->
    <!-- 클라이언트ID와 보안비밀 세팅 -->
    <beans:bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
      <beans:constructor-arg value="1043401104218-qa40fc4knjg7ru12mje6t95bl4p94vmc.apps.googleusercontent.com" />
      <beans:constructor-arg value="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" />
    </beans:bean>
    
    <!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
    <beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
        <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email" />
         <beans:property name="redirectUri" value="http://localhost:8080/tteutto/member/googleCallback" />
    </beans:bean>
	
	
	<!-- 웹소켓 클래스 Bean 등록 -->
	<!-- 1. namespaces 탭에서 websocket 체크 -->
	<!-- 2. Bean 생성 구문 작성 -->
	<beans:bean id="noteHandler" class="edu.kh.tteutto.chatNote.websocket.NoteWebsocketHandler" />
	<beans:bean id="chatHandler" class="edu.kh.tteutto.chat.websocket.ChatWebsocketHandler" /> <!-- 채팅  -->
	
	<websocket:handlers>
		<!-- 웹소켓과 매핑할 요청 주소 -->
		<!-- path : SockJS 생성 시 기입한 주소 -->
		<!-- handler : 연결할 bean ID(웹소켓 다룰려고 만든 클래스) -->
		<websocket:mapping handler="noteHandler" path="/note"/>
		
		
		<!-- interceptors : HTTP 요청 객체에서 request, response를 가로채는 역할 -->
		<!-- handshake-interceptors : 가로챈 내용 중 HttpSession을 별도로 가로챈 후 연결된 클래스에 WebSockSession 형태로 넣어주는 역할 -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		<websocket:sockjs />
	
	</websocket:handlers>
	
	<!-- 채팅  -->
	<websocket:handlers>
		
		<websocket:mapping handler="chatHandler" path="/chat"/>
		
		<!-- interceptors : HTTP 요청 객체에서 request, response를 가로채는 역할 -->
		<!-- handshake-interceptors : 가로챈 내용 중 HttpSession을 별도로 가로챈 후 연결된 클래스에 WebSockSession 형태로 넣어주는 역할 -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		<websocket:sockjs />
	
	</websocket:handlers>
	
	
	
	
</beans:beans>
