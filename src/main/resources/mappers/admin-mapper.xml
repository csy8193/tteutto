<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">


	<!-- Admin VO -->
	<resultMap type="Admin" id="classlist_rm">
		<id property="classNo" column="CLASS_NO" />
		<result property="classStatus" column="CLASS_ST" />
				
		<result property="className" column="CLASS_NM" />
		<result property="classRequestDate" column="CLASS_REQ_DT" />
		
		<result property="episodeCount" column="EP_COUNT" />
		
		<result property="memberName" column="MEMBER_NM" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>
	
	<resultMap type="Admin" id="episodelist_rm">
		<id property="episodeNo" column="EP_NO" />
		<result property="classNo" column="CLASS_NO" />
		<result property="episodeStatus" column="EP_ST" />
		
		
		<result property="className" column="CLASS_NM" />
		<result property="classRequestDate" column="CLASS_REQ_DT" />
		
		<result property="episodeCount" column="EP_COUNT" />
		
		<result property="memberName" column="MEMBER_NM" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>
	
	<!-- 회차 VO -->
	<resultMap type="AdminEpisode" id="episode_rm">
		<id property="episodeNo" column="EP_NO"/>
		<result property="episodePrice" column="EP_PRICE"/>
		<result property="episodeStatus" column="EP_ST"/>
		<result property="episodeCount" column="EP_COUNT"/>
		<result property="episodePlace" column="EP_PLACE"/>
		
		<collection property="scheduleList" column="EP_NO" 
					javaType="java.util.ArrayList" ofType="AdminEpisodeSchedule" select="selectSchedule" />
	</resultMap>
	
	<!-- 회차 스케줄 VO -->
	<resultMap type="AdminEpisodeSchedule" id="episodeSchedule_rm">
		<id property="scheduleNo" column="SCHDL_NO"/>
		<result property="scheduleDate" column="SCHDL_DT"/>
		<result property="scheduleWeek" column="SCHDL_WEEK"/>
		<result property="scheduleStartTime" column="SCHDL_START_TIME"/>
		<result property="scheduleEndTime" column="SCHDL_END_TIME"/>
		<result property="scheduleTime" column="SCHDL_TIME"/>
		<result property="episodeNo" column="EP_NO"/>
	</resultMap>
	
	<!-- Admin VO 유저 목록 -->
	<resultMap type="Admin" id="user_rm">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberName" column="MEMBER_NM"/>
		<result property="memberGrade" column="MEMBER_GRADE"/>
		<result property="memberStatus" column="MEMBER_ST"/>
		<result property="memberBirth" column="MEMBER_BIRTH"/>
		<result property="memberGender" column="MEMBER_GENDER"/>
		<result property="memberPhone" column="MEMBER_PNO"/>
		<result property="teacherEnroll" column="TEACHER_ENROLL"/>
		<result property="teacherStatus" column="TEACHER_ST"/>
	</resultMap>
	
	
	<!-- 강사 VO -->
	<resultMap type="AdminTeacher" id="adminTeacher_rm">
		<id property="memberNo" column="MEMBER_NO" />
		
		<result property="memberName" column="MEMBER_NM" />
		
		<result property="teacherImg" column="TEACHER_IMG" />
		<result property="teacherIntro" column="TEACHER_INTRO" />
		<result property="teacherRequestDate" column="TEACHER_REQ_DT" />
		<result property="teacherStatus" column="TEACHER_ST" />
		
		<collection property="careerList" column="MEMBER_NO" 
					javaType="java.util.ArrayList" ofType="AdminTeacherCareer" select="selectTeacherCareerList" />
					
		<collection property="snsList" column="MEMBER_NO" 
					javaType="java.util.ArrayList" ofType="AdminTeacherSNS" select="selectTeacherSnsList" />
	</resultMap>
	
	<!-- 강사 경력 VO -->
	<resultMap type="AdminTeacherCareer" id="career_rm">
		<id property="careerNo" column="CAREER_NO"/>
		<result property="careerContent" column="CAREER_CONTENT"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="imgPath" column="IMG_PATH"/>
		<result property="imgName" column="IMG_NM"/>
		<result property="imgOriginal" column="IMG_ORIGINAL"/>
	</resultMap>
	
	<!-- 강사 sns 링크 VO -->
	<resultMap type="AdminTeacherSNS" id="sns_rm">
		<id property="snsNo" column="SNS_NO"/>
		<result property="snsLink" column="SNS_LINK"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<!-- 신고 VO -->
	<resultMap type="AdminReport" id="report_rm">
		<id property="reportNo" column="REPORT_NO"/>
		<result property="reportDiv" column="REPORT_DIV"/>
		<result property="reportContent" column="REPORT_CONTENT"/>
		<result property="reportStatus" column="REPORT_ST"/>
		<result property="reportRequestDate" column="REPORT_REQ_DT"/>
		<result property="registerNo" column="REG_NO"/>
		<result property="reportName" column="REPORT_NM"/>
		<result property="reportTarget" column="REPORT_TARGET"/>
		<result property="reportTargetNo" column="REPORT_TARGET_NO"/>
		<result property="reportCount" column="REPORT_COUNT"/>
	</resultMap>
	
	
	
	
	<!-- 공지사항 VO -->
	<resultMap type="AdminNoticeFaq" id="notice_rm">
		<id property="noticeNo" column="NOTICE_NO"/>
		<result property="noticeTitle" column="NOTICE_TITLE"/>
		<result property="noticeContent" column="NOTICE_CONTENT"/>
		<result property="noticeDate" column="NOTICE_DT"/>
	</resultMap>
	
	<!-- FAQ VO -->
	<resultMap type="AdminNoticeFaq" id="faq_rm">
		<id property="faqNo" column="FAQ_NO"/>
		<result property="faqDiv" column="FAQ_DIV"/>
		<result property="faqQuestion" column="FAQ_QUESTION"/>
		<result property="faqAnswer" column="FAQ_ANSWER"/>
	</resultMap>
	
	<!-- 정산 VO -->
	<resultMap type="AdminCalcRefund" id="calc_rm">
		<id property="calNo" column="CAL_NO"/>
		<result property="calRequestNo" column="CAL_REQ_NO"/>
		<result property="calStatus" column="CAL_ST"/>
		<result property="teacherName" column="TEACHER_NM"/>
		<result property="className" column="CLASS_NM"/>
		<result property="episodeCount" column="EP_COUNT"/>
		<result property="studentName" column="STUDENT_NM"/>
		<result property="calPrice" column="CAL_PRICE"/>
		<result property="classProgress" column="CLASS_PROGRESS"/>
	</resultMap>
	
	
	<!-- 환불 VO -->
	<resultMap type="AdminCalcRefund" id="refund_rm">
		<id property="refundNo" column="REFUND_NO"/>
		<result property="refundRequestDate" column="REFUND_REQ_DT"/>	
		<result property="classProgress" column="CLASS_PROGRESS"/>	
		<result property="refundMoney" column="REFUND_MONEY"/>	
		<result property="refundStatus" column="REFUND_STATUS"/>
		<result property="studentName" column="STUDENT_NM"/>
		<result property="className" column="CLASS_NM"/>
		<result property="episodeCount" column="EP_COUNT"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	
	<!-- 클래스 VO -->
	<resultMap type="AdminClass" id="class_rm">
		<id property="classNo" column="CLASS_NO"/>
		<result property="classArea" column="CLASS_AREA"/>
		<result property="classType" column="CLASS_TYPE"/>
		<result property="classPerson" column="CLASS_PERSON"/>
		<result property="classMinPerson" column="CLASS_MIN_PERSON"/>
		<result property="classMaxPerson" column="CLASS_MAX_PERSON"/>
		<result property="className" column="CLASS_NM"/>
		<result property="classIntro" column="CLASS_INTRO"/>
		<result property="classLevel" column="CLASS_LEVEL"/>
		<result property="categoryName" column="CT_NM"/>
		<result property="categoryDetailName" column="CT_DETAIL_NM"/>
		
		<collection property="thumbnailImg" column="CLASS_NO" 
			javaType="java.util.ArrayList" ofType="AdminClassThumbnail" select="selectClassThumbnail" />
	</resultMap>
	
	<!-- 클래스 이미지 VO -->
	<resultMap type="AdminClassThumbnail" id="thumbnail_rm">
		<id property="ThumbnailImgNo" column="TH_IMG_NO"/>
		<result property="ThumbnailImgName" column="TH_IMG_NM"/>
		<result property="ThumbnailImgLevel" column="TH_IMG_LEVEL"/>
		<result property="classNo" column="CLASS_NO"/>
	</resultMap>
	
	<!-- 후기 VO -->
	<resultMap type="AdminReview" id="review_rm">
		<id property="reviewNo" column="RE_NO"/>
		<result property="reviewStar" column="RE_STAR"/>
		<result property="reviewContent" column="RE_CONTENT"/>
		<result property="reviewDate" column="RE_DT"/>
		<result property="reviewStatus" column="RE_ST"/>
		<result property="registerNo" column="REG_NO"/>
		<result property="memberName" column="MEMBER_NM"/>
		<result property="episodeCount" column="EP_COUNT"/>
		<result property="className" column="CLASS_NM"/>
		<result property="memberNo" column="MEMBER_NO"/>
	</resultMap>
	
	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 회차 스케줄 조회 -->
	<select id="selectSchedule" resultMap="episodeSchedule_rm">
		SELECT SCHDL_NO, TO_CHAR(SCHDL_DT, 'YYYY-MM-DD') SCHDL_DT, SCHDL_WEEK, SCHDL_START_TIME, SCHDL_END_TIME, EP_NO, SCHDL_TIME 
		FROM EP_SCHEDULE
		WHERE EP_NO = #{episodeNo}
	</select>
	
	<!-- 클래스 썸네일 조회 -->
	<select id="selectClassThumbnail" resultMap="thumbnail_rm">
		SELECT * FROM THUMBNAIL_IMG
		WHERE CLASS_NO = #{ClassNo}
	</select>
	
	<!-- 강사 커리어 조회 -->
	<select id="selectTeacherCareerList" resultMap="career_rm">
		SELECT * FROM CAREER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 강사 커리어 조회 -->
	<select id="selectTeacherSnsList" resultMap="sns_rm">
		SELECT * FROM SNS
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 회차별 목록 조회 -->
	<select id="classEpisodeList" resultMap="episodelist_rm">
		SELECT EP_NO, CLASS_NO, CLASS_NM, CLASS_REQ_DT, EP_COUNT, MEMBER_NM, MEMBER_NO, EP_ST
		FROM EPISODE
		JOIN CLASS USING(CLASS_NO)
		JOIN TEACHER USING(MEMBER_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE EP_ST = 0 OR EP_ST = 1
	</select>
	
	<!-- 회차 목록 조회 후 검토중으로 업데이트 -->
	<update id="episodeStatusUpdate">
		UPDATE EPISODE SET EP_ST = 1 WHERE EP_NO = #{episodeNo}
	</update>
	
	<!-- 회차별 신청 승인 -->
	<update id="episodeAgree">
		UPDATE EPISODE SET EP_ST = 2
		WHERE EP_NO = #{episodeNo}
	</update>
	
	<!-- 쪽지 보내기 -->
	<insert id="sendNote">
		INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, #{noteContent}, DEFAULT, #{memberNo})
	</insert>
	
	<!-- 회차별 신청 거절 -->
	<update id="episodeDeny">
		UPDATE EPISODE SET EP_ST = 3
		WHERE EP_NO = #{episodeNo}
	</update>
	
	<select id="selectEpisode" resultMap="episode_rm">
		SELECT EP_NO, EP_PRICE, EP_ST, EP_COUNT, EP_PLACE FROM EPISODE
		WHERE EP_NO = #{episodeNo}
	</select>
	
	<!-- 클래스 신청 목록 조회 -->
	<select id="classList" resultMap="classlist_rm">
		SELECT CLASS_NO, CLASS_NM, CLASS_REQ_DT, MEMBER_NM, MEMBER_NO, CLASS_ST
		FROM CLASS
		JOIN TEACHER USING(MEMBER_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE CLASS_ST = 0 OR CLASS_ST = 1
	</select>
	
	<!-- 클래스 신청 승인 -->
	<update id="classAgree">
		UPDATE CLASS SET CLASS_ST = 2
		WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 신청 거절 -->
	<update id="classDeny">
		UPDATE CLASS SET CLASS_ST = 3
		WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 상세 조회 -->
	<select id="selectClass" resultMap="class_rm">
		SELECT CLASS_AREA, CLASS_TYPE, CLASS_PERSON, CLASS_MIN_PERSON, CLASS_MAX_PERSON,
		CLASS_NM, CLASS_INTRO, CLASS_LEVEL, CT_NM, CT_DETAIL_NM FROM CLASS
		JOIN CLASS_CATEGORY ON(CLASS.CATG_NO = CLASS_CATEGORY.CT_NO)
		JOIN CT_DETAIL USING(CT_DETAIL_NO)
		WHERE CLASS_NO = #{classNo}
	</select>
	
	<!-- 클래스 상세 조회 후 상태 업데이트 -->
	<update id="classStatusUpdate">
		UPDATE CLASS SET CLASS_ST = 1 WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 수정 신청 목록 조회 -->
	<select id="classUpdateList" resultMap="classlist_rm">
		SELECT C.CLASS_NO, C.CLASS_NM, C.CLASS_REQ_DT, MEMBER_NM, MEMBER_NO, C.CLASS_ST
		FROM CLASS_UPDATE C
		JOIN CLASS CC ON(C.CLASS_NO = CC.CLASS_NO)
		JOIN TEACHER USING(MEMBER_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE C.CLASS_ST = 0 OR C.CLASS_ST = 1
	</select>
	
	<!-- 클래스 수정할 내용 조회 -->
	<select id="selectUpdateClass" resultMap="class_rm">
		SELECT CLASS_NO, CLASS_AREA, CLASS_MIN_PERSON, CLASS_MAX_PERSON, CLASS_NM, CLASS_INTRO
		FROM CLASS_UPDATE
		WHERE CLASS_NO = #{classNo}
	</select>
	
	<!-- 클래스 수정 승인 후 덮어씌우기 -->
	<update id="updateClass">
		UPDATE CLASS SET CLASS_AREA = #{classArea}, CLASS_MIN_PERSON = #{classMinPerson}, CLASS_MAX_PERSON = #{classMaxPerson}, CLASS_NM = #{className}, CLASS_INTRO = #{classIntro}
		WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 수정 승인 후 상태 수정하기 -->
	<update id="classUpdateAgree">
		UPDATE CLASS_UPDATE SET CLASS_ST = 2 WHERE CLASS_NO = #{classNo}
	</update>
	
	<!-- 클래스 수정 거절 후 상태 수정하기 -->
	<update id="classUpdateDeny">
		UPDATE CLASS_UPDATE SET CLASS_ST = 3 WHERE CLASS_NO = #{classNo}
	</update>
	
	<select id="selectClassUpdate" resultMap="class_rm">
		SELECT CLASS_AREA, CLASS_MIN_PERSON, CLASS_MAX_PERSON, CLASS_NM, CLASS_INTRO
		FROM CLASS_UPDATE
	</select>
	
	<update id="classUpdateStatus">
		UPDATE CLASS_UPDATE SET CLASS_ST = 1 WHERE CLASS_NO = #{classNo}
	</update>
	
	
	
	
	
	
	
	
	
	<!-- 유저 목록 조회 -->
	<select id="userList" resultMap="user_rm">
		SELECT MEMBER_NO, MEMBER_NM, MEMBER_GRADE, MEMBER_ST, 
        		TEACHER_ENROLL, TO_CHAR(MEMBER_BIRTH, 'YYYY-MM-DD') MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PNO, NVL(TEACHER_ST, 100) TEACHER_ST
		FROM MEMBER
		LEFT JOIN TEACHER USING(MEMBER_NO)
	</select>
	
	<!-- 유저 정보 업데이트 -->
	<update id="userSave" parameterType="Admin">
		UPDATE MEMBER SET MEMBER_NM = #{memberName}, MEMBER_GRADE = #{memberGrade}, 
		TEACHER_ENROLL = #{teacherEnroll}, MEMBER_ST = #{memberStatus}, MEMBER_BIRTH = #{memberBirth},
		MEMBER_GENDER = #{memberGender}, MEMBER_PNO = #{memberPhone}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<update id="teacherStatusUpdate2">
		UPDATE TEACHER SET TEACHER_ST = #{teacherStatus} WHERE MEMBER_NO = #{memberNo}
	</update>
	
	
	
	
	
	<!-- 강사 목록 조회 -->
	<select id="teacherList" resultMap="adminTeacher_rm">
		SELECT MEMBER_NO, TEACHER_REQ_DT, MEMBER_NM, TEACHER_ST
		FROM TEACHER
		JOIN MEMBER USING(MEMBER_NO)
		WHERE TEACHER_ST = 0 OR TEACHER_ST = 1
	</select>
	
	<!-- 강사 신청 승인 -->
	<update id="teacherAgree">
		UPDATE TEACHER SET TEACHER_ST = 2
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<update id="teacherEnrollY">
		UPDATE MEMBER SET TEACHER_ENROLL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	
	<!-- 강사 신청 거절 -->
	<update id="teacherDeny">
		UPDATE TEACHER SET TEACHER_ST = 3
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 강사 신청 검토중으로 업데이트 -->
	<update id="teacherStatusUpdate">
		UPDATE TEACHER SET TEACHER_ST = 1 WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 강사 정보 조회 -->
	<select id="selectTeacher" resultMap="adminTeacher_rm">
		SELECT TEACHER_IMG, TEACHER_INTRO, MEMBER_NM, MEMBER_NO FROM TEACHER
		JOIN MEMBER USING(MEMBER_NO)
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 학생 신고 목록 조회 -->
	<select id="studentReportList" resultMap="report_rm">
		SELECT A.*, 

		(SELECT COUNT(*) FROM REPORT R
		JOIN REGISTER REG USING(REG_NO)
		WHERE REG.MEMBER_NO = A.REPORT_TARGET_NO AND REPORT_ST = 1) "REPORT_COUNT"
		
		FROM
		
		(SELECT REG_NM "REPORT_TARGET", REPORT_CONTENT, MEMBER_NM "REPORT_NM", REG_NO, REPORT_REQ_DT, REPORT_NO, REGISTER.MEMBER_NO "REPORT_TARGET_NO", REPORT_DIV
		FROM REPORT
		JOIN REGISTER USING(REG_NO)
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS C USING(CLASS_NO)
		JOIN TEACHER T ON(T.MEMBER_NO = C.MEMBER_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = T.MEMBER_NO)
		WHERE REPORT_DIV = 1 AND REPORT_ST = 0) A
	</select>
	
	<!-- 학생 신고 신청 승인/거절 -->
	<update id="reportAgreeDeny">
		UPDATE REPORT SET REPORT_ST = #{reportStatus} WHERE REPORT_NO = #{reportNo}
	</update>
	
	<!-- 계정 정지 -->
	<update id="memberBan">	
		UPDATE MEMBER SET MEMBER_ST = 2 WHERE MEMBER_NO = #{reportTargetNo}
	</update>
	
	<!-- 클래스 신고 목록 조회 -->
	<select id="classReportList" resultMap="report_rm">
		SELECT A.*, 

		(SELECT COUNT(*) FROM REPORT R
		JOIN REGISTER REG USING(REG_NO)
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS C ON(C.CLASS_NO = EPISODE.CLASS_NO)
		WHERE C.CLASS_NO = A.CLASS_NO AND REPORT_ST = 1) "REPORT_COUNT"
		
		FROM
		
		(SELECT REG_NM "REPORT_NM", REPORT_CONTENT, CLASS_NM "REPORT_TARGET", REG_NO, REPORT_REQ_DT, REPORT_NO, M.MEMBER_NO "REPORT_TARGET_NO", CLASS_NO, REPORT_DIV
		FROM REPORT
		JOIN REGISTER USING(REG_NO)
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS C USING(CLASS_NO)
		JOIN TEACHER T ON(T.MEMBER_NO = C.MEMBER_NO)
		JOIN MEMBER M ON(M.MEMBER_NO = T.MEMBER_NO)
		WHERE REPORT_DIV = 0 AND REPORT_ST = 0) A
	</select>
	
	<!-- 강사 정지 -->
	<update id="teacherBan">	
		UPDATE TEACHER SET TEACHER_ST = 4 WHERE MEMBER_NO = #{reportTargetNo}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 정산 신청 목록 조회 -->
	<select id="calculateList" resultMap="calc_rm">
		SELECT CAL_NO, CAL_REQ_NO, MEMBER_NM TEACHER_NM, CLASS_NM, EP_COUNT, CAL_ST
		FROM CALCULATE
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS USING(CLASS_NO)
		JOIN TEACHER USING(MEMBER_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE CAL_ST != 1
	</select>
	
	<!-- 정산 상태 수정 -->
	<update id="calStatus">
		UPDATE CALCULATE SET CAL_ST = 2 WHERE CAL_NO = #{calNo}
	</update>
	
	<!-- 영수증 목록 -->
	<select id="receiptList" resultMap="calc_rm">
		SELECT REG_NM "STUDENT_NM",
		    CASE WHEN REFUND_MONEY IS NULL
		        THEN EP_PRICE
		        ELSE REFUND_MONEY
		    END "CAL_PRICE", CAL_NO
		
		FROM CALCULATE
		JOIN EPISODE USING(EP_NO)
		JOIN REGISTER USING(EP_NO)
		LEFT JOIN REFUND USING(REG_NO)
		WHERE PAY_ST = 0 AND (REFUND_ST IS NULL OR REFUND_ST = 1) AND CAL_NO = #{calNo}
	</select>
	
	<!-- 영수증 생성 -->
	<insert id="createReceipt" parameterType="java.util.List">
		INSERT INTO RECEIPT
		SELECT SEQ_RECEIPT_NO.NEXTVAL, A.* FROM
		<foreach collection="list" item="s" open="(" close=") A" separator=" UNION ALL ">
			SELECT #{s.studentName} STUDENT_NM,
				   #{s.calPrice} CAL_PRICE,
				   #{s.calNo} CAL_NO
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 정산 학생 목록 조회 -->
	<select id="receiptStList" resultMap="calc_rm">
		SELECT  A.*,
		(
		SELECT CLASS_PROGRESS FROM REGISTER R
		JOIN REFUND USING(REG_NO)
		WHERE R.EP_NO = A.EP_NO
		) "CLASS_PROGRESS"
		
		FROM
		
		(SELECT STUDENT_NM, CAL_PRICE, EP_NO FROM RECEIPT
		JOIN CALCULATE USING(CAL_NO)
		JOIN EPISODE USING(EP_NO)
		WHERE CAL_NO = #{calNo}) A
	</select>
	
	<!-- 정산 클래스이름, 강사명 조회 -->
	<select id="calculateClassTeacher" resultMap="calc_rm">
		SELECT MEMBER_NO CAL_NO, MEMBER_NM TEACHER_NM, CLASS_NM, EP_COUNT
		FROM CALCULATE
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS USING(CLASS_NO)
		JOIN TEACHER USING(MEMBER_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE CAL_NO = #{calNo} AND CAL_ST = 2
	</select>
	
	<!-- 정산 완료 업데이트 -->
	<update id="receiptUpdate">
		UPDATE CALCULATE SET CAL_ST = 1, CAL_FIN_NO = SYSDATE WHERE CAL_NO=#{calNo}
	</update>
	
	<!-- 환불 신청 목록 조회 -->
	<select id="refundList" resultMap="refund_rm">
		SELECT REFUND_NO, REFUND_REQ_DT, CLASS_PROGRESS, REFUND_MONEY, REG_NM "STUDENT_NM", CLASS_NM, EP_COUNT, REGISTER.MEMBER_NO
		FROM REFUND
		JOIN REGISTER USING(REG_NO)
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS USING(CLASS_NO)
		WHERE REFUND_ST = 0
	</select>
	
	<!-- 환불 승인 -->
	<update id="refundAgree">
		UPDATE REFUND SET REFUND_ST = 1, REFUND_FIN_DT = SYSDATE WHERE REFUND_NO = #{refundNo}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 공지사항 목록 조회 -->
	<select id="noticeList" resultMap="notice_rm">
		SELECT NOTICE_NO, NOTICE_TITLE, NOTICE_DT FROM NOTICE
	</select>
	
	<!-- 공지사항 삭제 -->
	<delete id="noticeDelete">
		DELETE FROM NOTICE WHERE NOTICE_NO = #{noticeNo}
	</delete>
	
	<!-- 공지사항 게시글 삽입 -->
	<insert id="insertNotice" useGeneratedKeys="true" parameterType="AdminNoticeFaq">
		<selectKey order="BEFORE" resultType="_int" keyProperty="noticeNo">
			SELECT SEQ_NOTICE_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO NOTICE VALUES(#{noticeNo}, #{noticeTitle}, #{noticeContent}, DEFAULT)
	</insert>
	
	<!-- 공지사항 이미지 삽입 -->
	<insert id="insertImgList" parameterType="java.util.List">
		INSERT INTO NOTICE_IMG
		SELECT SEQ_NOTICE_IMG_NO.NEXTVAL, A.* FROM
		
		<foreach collection="list" item="img" open="(" close=") A" separator=" UNION ALL ">
			SELECT #{img.imgPath} IMG_PATH,
				   #{img.imgName} IMG_NM,
				   #{img.imgOriginal} IMG_ORIGINAL,
				   #{img.noticeNo} NOTICE_NO
			FROM DUAL
		</foreach>
	</insert>
	
	
	<!-- FAQ 목록 조회 -->
	<select id="faqList" resultMap="faq_rm">
		SELECT FAQ_NO, FAQ_DIV, FAQ_QUESTION FROM FAQ
	</select>
	
	<!-- FAQ 삭제 -->
	<delete id="faqDelete">
		DELETE FROM FAQ WHERE FAQ_NO = #{faqNo}
	</delete>
	
	<!-- FAQ 게시글 삽입 -->
	<insert id="insertFaq" parameterType="AdminNoticeFaq">
		INSERT INTO FAQ VALUES(SEQ_FAQ_NO.NEXTVAL, #{faqDiv}, #{faqQuestion}, #{faqAnswer})
	</insert>
	
	<!-- 후기 목록 조회 -->
	<select id="reviewList" resultMap="review_rm">
		SELECT RE_NO, CLASS_NM, EP_COUNT, REG_NM MEMBER_NM, RE_CONTENT, RE_ST, RE_DT, REGISTER.MEMBER_NO
		FROM REVIEW
		JOIN REGISTER USING(REG_NO)
		JOIN EPISODE USING(EP_NO)
		JOIN CLASS USING(CLASS_NO)
	</select>
	
	<!-- 후기 삭제 -->
	<update id="reviewDeny">
		UPDATE REVIEW SET RE_ST = 1 WHERE RE_NO = #{reviewNo}
	</update>
	
	<!-- 쪽지 알림 갯수 -->
	<select id="selectNoteAlarm" resultType="_int">
		SELECT COUNT(*) FROM NOTE WHERE MEMBER_NO = #{memberNo} AND NOTE_ST = 0
	</select>
	
	<select id="selectChatAlarm" resultType="_int">
		SELECT COUNT(*) FROM CHAT_MESSAGE WHERE MSG_ST = 0 AND OTHER_MEMBER_NO = #{memberNo}
	</select>
	
</mapper>
